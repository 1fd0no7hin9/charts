{{- $replicaCount := int .Values.solr.replicaCount }}
{{- $fullname := include "solr.fullname" . }}
{{- $releaseNamespace := .Release.Namespace }}
{{- $clusterDomain := .Values.clusterDomain }}
{{- $interBrokerPort := .Values.service.internalPort }}
{{- $clientPort := .Values.service.port }}
apiVersion: {{ include "common.capabilities.statefulset.apiVersion" . }}
kind: StatefulSet
metadata:
  name: {{ include "solr.fullname" . }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: solr
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  podManagementPolicy: Parallel
  replicas: {{ .Values.solr.replicaCount }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: solr
  serviceName: {{ template "solr.fullname" . }}-headless
  updateStrategy:
    type: {{ .Values.solr.updateStrategy | quote }}
    {{- if (eq "OnDelete" .Values.solr.updateStrategy) }}
    rollingUpdate: null
    {{- else if .Values.solr.rollingUpdatePartition }}
    rollingUpdate:
      partition: {{ .Values.solr.rollingUpdatePartition }}
    {{- end }}
  template:
    metadata:
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: solr
        {{- if .Values.solr.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.podLabels "context" $) | nindent 8 }}
        {{- end }}
      annotations:
        {{- if .Values.solr.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
    spec:
{{- include "solr.imagePullSecrets" . | indent 6 }}
      {{- if .Values.solr.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.solr.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.solr.podAffinityPreset "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.solr.podAntiAffinityPreset "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.solr.nodeAffinityPreset.type "key" .Values.solr.nodeAffinityPreset.key "values" .Values.solr.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.solr.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.solr.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.solr.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.solr.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.solr.priorityClassName }}
      priorityClassName: {{ .Values.solr.priorityClassName }}
      {{- end }}
      {{- if .Values.solr.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.solr.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ template "solr.serviceAccountName" . }}
      {{- end }}
      {{- if or (and .Values.volumePermissions.enabled .Values.persistence.enabled) .Values.solr.initContainers }}
      initContainers:
        {{- if and .Values.volumePermissions.enabled .Values.persistence.enabled }}
        - name: volume-permissions
          image: {{ include "volumePermissions.image" . }}
          imagePullPolicy: {{ .Values.volumePermissions.image.pullPolicy | quote }}
          command:
            - /bin/bash
          args:
            - -ec
            - |
              chown -R "{{ .Values.podSecurityContext.runAsUser }}:{{ .Values.podSecurityContext.fsGroup }}" "{{ .Values.mountPath }}"
              chown -R "{{ .Values.podSecurityContext.runAsUser }}:{{ .Values.podSecurityContext.fsGroup }}" "{{ .Values.mountPath }}"
          securityContext: {{- .Values.volumePermissions.securityContext | toYaml | nindent 12 }}
          {{- if .Values.volumePermissions.resources }}
          resources: {{- toYaml .Values.volumePermissions.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: {{ .Values.persistence.mountPath }}
            - name: logs
              mountPath: {{ .Values.logPersistence.mountPath }}
        {{- end }}

        {{- if .Values.solr.initContainers }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.solr.initContainers "context" $ ) | nindent 8 }}
        {{- end }}
      {{- end }}
      containers:
        - name: solr
          image: {{ include "solr.image" . }}
          imagePullPolicy: {{ .Values.solr.image.pullPolicy | quote }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.command "context" $) | nindent 12 }}
          {{- if .Values.solr.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.args "context" $) | nindent 12 }}
          {{- end }}
          env:
            - name: SOLR_CORE
              value: "test-core"          
            {{- if .Values.solr.extraEnvVars }}
            {{ include "common.tplvalues.render" ( dict "value" .Values.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          ports:
            - name: solr-client
              containerPort: 8983
          {{- if .Values.solr.livenessProbe.enabled }}
          livenessProbe:
            tcpSocket:
              port: solr-client
            initialDelaySeconds: {{ .Values.solr.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.solr.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.solr.livenessProbe.failureThreshold }}
            periodSeconds: {{ .Values.solr.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.solr.livenessProbe.successThreshold }}
          {{- else if .Values.solr.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.solr.customLivenessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.solr.readinessProbe.enabled }}
          readinessProbe:
            tcpSocket:
              port: solr-client
            initialDelaySeconds: {{ .Values.solr.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.solr.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.solr.readinessProbe.failureThreshold }}
            periodSeconds: {{ .Values.solr.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.solr.readinessProbe.successThreshold }}
          {{- else if .Values.solr.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.solr.customReadinessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.solr.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: {{ .Values.persistence.mountPath }}
            - name: logs
              mountPath: {{ .Values.logPersistence.mountPath }}
              
        {{- if .Values.sidecars }}
        {{- include "common.tplvalues.render" (dict "value" .Values.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        {{- if .Values.extraVolumes }}
        {{- toYaml .Values.extraVolumes | nindent 8 }}
        {{- end }}
{{- if not .Values.persistence.enabled }}
        - name: data
          emptyDir: {}
{{- else if .Values.persistence.existingClaim }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ printf "%s" (tpl .Values.persistence.existingClaim .) }}
{{- end }}
{{- if not .Values.logPersistence.enabled }}
        - name: logs
          emptyDir: {}
{{- else if .Values.logPersistence.existingClaim }}
        - name: logs
          persistentVolumeClaim:
            claimName: {{ printf "%s" (tpl .Values.logPersistence.existingClaim .) }}
{{- end }}
  {{- if or (and .Values.persistence.enabled (not .Values.persistence.existingClaim)) (and .Values.logPersistence.enabled (not .Values.logPersistence.existingClaim)) }}
  volumeClaimTemplates:
  {{- end }}
{{- if and .Values.persistence.enabled (not .Values.persistence.existingClaim) }}
    - metadata:
        name: data
        {{- if .Values.persistence.annotations }}
        annotations: {{- include "common.tplvalues.render" (dict "value" .Values.persistence.annotations "context" $) | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
        {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
        {{ include "solr.storageClass" . | nindent 8 }}
{{- end }}
{{- if and .Values.logPersistence.enabled (not .Values.logPersistence.existingClaim) }}
    - metadata:
        name: logs
        {{- if .Values.logPersistence.annotations }}
        annotations: {{- include "solr.tplValue" (dict "value" .Values.logPersistence.annotations "context" $) | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
        {{- range .Values.logPersistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.logPersistence.size | quote }}
        {{ include "solr.storageClass" . | nindent 8 }}
{{- end }}
