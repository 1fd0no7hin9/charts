{{- $replicaCount := int .Values.replicaCount -}}
{{- $releaseNamespace := .Release.Namespace -}}
{{- $clusterDomain := .Values.clusterDomain -}}
{{- $fullname := include "solr.fullname" . -}}
{{- $servicePort := int .Values.service.port -}}
{{- $exportername := include "solr.exporter-name" . -}}
{{- $exporterPort := int .Values.exporter.port -}}

{{- if (eq .Values.service.type "LoadBalancer")  }}
---------------------------------------------------------------------------------------------
 WARNING

    By specifying "serviceType=LoadBalancer" and not configuring the authentication
    you have most likely exposed the solr externally without any
    authentication mechanism.

    For security reasons, we strongly suggest that you switch to "ClusterIP" or
    "NodePort". As alternative, you can also configure the Solr authentication.

---------------------------------------------------------------------------------------------
{{- end }}


** Your Solr cluster can be accessed in the following ways: **

  * Internally, within the kubernetes cluster on:

{{ $fullname }}.{{ $releaseNamespace }}.svc.{{ $clusterDomain }}:{{ $servicePort }}

{{- if contains "ClusterIP" .Values.service.type }}

  * External to the kubernetes cluster:

export POD_NAME=$(kubectl get pods --namespace {{ $releaseNamespace }} -l "app={{ $fullname }},component=server,release={{ .Release.Name }}" -o jsonpath="{ .items[0].metadata.name }")
echo "Visit http://127.0.0.1:{{ $servicePort }} to access Solr"
kubectl port-forward --namespace {{ $releaseNamespace }} $POD_NAME {{ $servicePort }}:{{ $servicePort }}

{{- else if contains "LoadBalancer" .Values.service.type }}

  * External to the kubernetes cluster:
  
  NOTE: It may take a few minutes for the LoadBalancer IPs to be available.
        Watch the status with: 'kubectl get svc --namespace {{ $releaseNamespace }} -l "app.kubernetes.io/name={{ template "solr.name" . }},app.kubernetes.io/instance={{ .Release.Name }},app.kubernetes.io/component=solr" -w'

        echo "$(kubectl get svc --namespace {{ $releaseNamespace }} -l "app.kubernetes.io/name={{ template "solr.name" . }},app.kubernetes.io/instance={{ .Release.Name }},app.kubernetes.io/component=solr" -o jsonpath='{.items[*].status.loadBalancer.ingress[0].ip}' | tr ' ' '\n')"

    Solr port: {{ .Values.service.port }}

{{- end }}

{{- if .Values.exporter.enabled  }}
** Solr Prometheus metrics are exported to the following endpoints: **

  * Internally, within the kubernetes cluster on:

{{ $exportername }}.{{ $releaseNamespace }}.svc.{{ $clusterDomain }}:{{ $exporterPort }}/metrics

{{- end }}